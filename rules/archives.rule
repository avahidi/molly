

rule LZMANew (tag = "archive") {
    var header = StringZ(0, 5);
    var type = Byte(6) & 0x10;
    if header == { 0xFF, 'L', 'Z', 'M', 'A'};

	var dir = dir("");
	system("7z e -o\"%s\" \"%s\"", dir, $filename);
}


rule LZMA_7z (tag = "archive", bigendian = false) {
	// LZMA format as implemented in 7Z
	var magic = Byte(0);
	var dsize = Long(1);
	var usize = Quad(5);

	if magic == 0x51 || magic == 0x5d;
	if dsize != 0 && (dsize & (dsize - 1)) == 0; // assume dict size is pow 2
	if (usize >> 32) < 4; // assume output above 16GB is invalid

	var dir = dir("");
	system("7z e -o\"%s\" \"%s\"", dir, $filename);
}

rule LZMA_lzip (tag = "archive", bigendian = false) {
	// LZMA with an lzip head
	var magic = String(0, 4);
	var type = Byte(4);
	var dsize = Byte(5);

	if magic == "LZIP";
	if dsize >= (1 << 12) && dsize <= (1 << 29);

	// TODO: extract lzip files
}

rule xz ( tag = "archive") {
	// https://tukaani.org/xz/xz-file-format.txt
	var magic = String(0, 6);
	if magic == { 0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00 };
	// TODO: extract xz files
}



rule ZIP (bigendian = false, tag = "archive") {
    var header = String(0, 4);
    var csize = Long(18);
    var usize = Long(22);

    if header == { 'P', 'K', 0x05, 0x06} || header == {'P', 'K', 0x03, 0x04};

    extract("zip", "");
}

rule TAR (tag = "archive")  {
    var magic = String(257, 8);
    var filename = StringZ(0, 100);

    if magic[0:5] == { 'u', 's', 't', 'a', 'r', 0x00} ||
        magic == { 'u', 's', 't', 'a', 'r', ' ', ' ', 0x00};

    extract("tar", "");
}

rule gzip (tag = "archive") {
	var id = String(0, 3);
	var mttime = Long(4);
	var xfl = Byte(8);
	var os = Byte(9);

	if id == { 0x1f, 0x8b, 0x08};
	if xfl == 2 || xfl == 4;

	extract("gz", "");
}

/*
rule cpio_ascii_new  (tag = "archive") {
    var magic = String(0, 6);
    if magic == "070701" || magic == "070702";
}
*/

rule cpio_ascii_old  (tag = "archive") {
    if $filesize % 512 == 0;

    var magic = String(0, 6);
    if magic == "070707";

    var namesize0 = String(59, 6);
    var namesize = strtol(String(59, 6));
    var filesize = String(65, 11);

    // some minimal sanity checks for cpio
    if namesize > 0 && namesize < 100;
    var firstfile = StringZ(76, namesize + 1);
    if len(firstfile) == namesize - 1; // zero teminated

    extract("cpio", "");
}


rule cpio_binary  (tag = "archive", bigendian = false) {
    if $filesize % 512 == 0;

    var magic = String(0, 2);
    if magic == { 0xc7, 0x71 };

    var namesize = Short(20);
    var filesize = Long(22);
    var firstfile = StringZ(26, namesize + 1);
    if len(firstfile) == namesize - 1; // zero teminated

    extract("cpio", "");
}
